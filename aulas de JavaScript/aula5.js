//--------------------------------------------Estrutura Condicional if/else-------------------------------------------------

/*A estrutura b√°sica de um if:
A estrutura condicional if segue um formato para que o c√≥digo seja executado de acordo com uma condi√ß√£o.

if (condicao) { // caso 'condicao' seja verdadeira, executa o c√≥digo
  // c√≥digo a ser executado
}
  Observe que a palavra-chave if √© seguida por um conjunto de par√™nteses () com uma condi√ß√£o dentro, e logo ap√≥s por um bloco de c√≥digo indicado por um conjunto de chaves {}.

Anota a√≠ üì£ :

Dentro dos par√™nteses do if √© fornecida uma condi√ß√£o que √© avaliada como true ou false.
Se a condi√ß√£o retorna verdadeiro (true), o c√≥digo dentro das chaves {} √© executado.
No exemplo, a condi√ß√£o a ser verificada √© o clima, ou seja, se est√° frio:

if (estiver frio) { // se estiver frio, nossa condi√ß√£o ser√° true
  saia com o casaco // ent√£o execute o c√≥digo
}

Ou seja, se est√° frio, o c√≥digo dentro do escopo do if ser√° executado.

Escopo? O que √© isso? ü§î

Um escopo √© um bloco de c√≥digo. Observe o exemplo abaixo:

if (1 + 1 === 2) { // true
  console.log('Entrou no escopo deste if'); // executa o c√≥digo
}

if (1 + 1 === 3) { // false
  console.log('N√£o entrou no escopo deste if'); // n√£o executa o c√≥digo
}

Na primeira condi√ß√£o est√° sendo verificada pelo if a express√£o 1 + 1 === 2 e sabemos que essa √© uma condi√ß√£o verdadeira (true), ent√£o o c√≥digo no escopo do if ser√° executado, e a frase 'Entrou no escopo deste if' √© exibida.
Na segunda condi√ß√£o, est√° sendo verificado se a express√£o 1 + 1 === 3, que √© falsa (false) e n√£o chega a entrar no escopo do if, por isso a frase ‚ÄòN√£o entrou no escopo deste if‚Äô n√£o √© executada.

*/


/*----------------------------------else
O else √© o complemento do if e que, traduzido para o portugu√™s, seria como dizer se e se n√£o.

Voltando ao nosso exemplo do casaco, observe:

if (estiver frio) { // SE estiver frio
  saia com casaco
} else { // SE N√ÉO
  deixe o casaco em casa
}

Caso a condi√ß√£o estiver frio seja verdadeira (true), o c√≥digo entrar√° no escopo do if; caso seja falsa (false) o c√≥digo entrar√° no escopo do else.

Anota a√≠ üì£ : Sempre que a condi√ß√£o do if n√£o for verdadeira, ou seja, retornar falso, o else entra em a√ß√£o e o c√≥digo dentro do seu escopo ser√° executado.

Isso significa que o else tamb√©m tem escopo? üßê

Exatamente! Assim como no if, o else tamb√©m tem escopo pr√≥prio, logo, as regras que se aplicam ao if tamb√©m s√£o aplicadas ao else.

Encadeamento de condicionais
Eventualmente voc√™ vai se deparar com problemas que ter√£o mais de duas condi√ß√µes a serem verificadas. Para atender a mais de duas condi√ß√µes n√≥s utilizamos o else if.

Para entender o else if, vamos supor que voc√™ gosta muito de vitamina de abacate e de banana, mas quando n√£o tem nenhuma dessas duas frutas em casa, voc√™ faz vitamina da fruta que estiver dispon√≠vel. Ent√£o voc√™ tem a seguinte estrutura condicional para fazer a vitamina:

Se a fruta for abacate, podemos fazer uma vitamina de abacate;
Se n√£o, se a fruta for banana, podemos fazer uma vitamina de banana;
Se n√£o for nenhuma dessas duas, podemos fazer um suco da fruta que temos dispon√≠vel.
Abaixo temos essa estrutura de condi√ß√£o em formato de c√≥digo:

const frutaDisponivel = 'banana';

if (frutaDisponivel === 'abacate') {
  console.log('Vitamina de abacate saindo');
} else if (frutaDisponivel === 'banana') {
  console.log('Vitamina de banana saindo');
} else {
  console.log('Suco de ' + frutaDisponivel + ' saindo');
}

Vamos analisar o nosso c√≥digo:

Temos uma vari√°vel chamada frutaDisponivel com o valor banana, que √© a fruta que est√° dispon√≠vel para fazer a vitamina;
Em seguida, temos tamb√©m uma estrutura condicional que vai verificar qual outra fruta est√° dispon√≠vel e, de acordo com a resposta, nos retornar√° uma das duas vitaminas ou um suco da fruta dispon√≠vel.
Perceba que foi utilizada uma nova palavra-chave, o else if (se n√£o, se). Ela √© utilizada quando precisamos verificar algo al√©m do que foi verificado no primeiro if, ou seja, teremos 2 ou mais compara√ß√µes.

Voc√™ pode adicionar quantos else if forem necess√°rios em uma mesma estrutura condicional. Veja esse exemplo em que tamb√©m foi aplicado o else/if:

A estrutura condicional abaixo representa o sistema de notas da escola Trybe, refer√™ncia no ensino de programa√ß√£o üòâ

  const notaDaPessoaEstudante = 7.5;

if (notaDaPessoaEstudante >= 8) {
  console.log('Nota A');
} else if (notaDaPessoaEstudante >= 6 && notaDaPessoaEstudante < 8 ) {
  console.log('Nota B');
} else if (notaDaPessoaEstudante >= 4 && notaDaPessoaEstudante < 6 ) {
  console.log('Nota C');
} else {
  console.log('Nota D');
}
*/

//----------------------------------------------------------Exerc√≠cios---------------------------------------------

/*
Atribua uma mensagem ‚úâÔ∏è
Crie um algoritmo que atribui uma mensagem √† vari√°vel por meio de uma condicional if.

Para isso, siga as instru√ß√µes a seguir:

Crie uma vari√°vel chamada atribuirMensagem e atribua o valor true √† ela;
Crie uma vari√°vel chamada mensagem para armazenar uma string que ser√° a mensagem, mas n√£o atribua nenhum valor para ela;
Crie uma estrutura condicional if para que caso a vari√°vel atribuirMensagem seja verdadeira, a vari√°vel mensagem receba a string 'Ol√°, Tryber!';
*/

let atribuirMensagem = true;
let mensagem;
    if (atribuirMensagem ) {
        mensagem = ('Ol√°, Tryber!');
        console.log(mensagem);
    }

/*
Complete o c√≥digo üí°
Analise o c√≥digo a seguir:

let lampada = 'ligada';
let estadoLampada;

if (???) {
  estadoLampada = 'A l√¢mpada est√° ligada!';
} ??? {
  ????????
}

Com base no seu aprendizado sobre if/else, altere o c√≥digo onde se encontram os pontos de interroga√ß√£o (?), seguindo as instru√ß√µes abaixo:

Uma opera√ß√£o de compara√ß√£o na condicional if que verifique se o valor da vari√°vel lampada √© igual a 'ligada';
Uma condicional else que verifique se, caso o valor da vari√°vel lampada n√£o for igual a ‚Äòligada‚Äô, ent√£o a vari√°vel estadoLampada receber√° a string 'A l√¢mpada est√° desligada!'.
*/

let lampada = 'ligada';
let estadoLampada;

if (lampada === 'ligada') {
  estadoLampada = 'A l√¢mpada est√° ligada!';
} else {
  estadoLampada = 'A l√¢mpada est√° desligada!';
};
console.log(estadoLampada);

/*
Verifique se √© par ou √≠mpar üî¢
Crie um algoritmo que verifica se o valor da vari√°vel num √© par ou √≠mpar:

let num = 22;
let mensagem;

Se a vari√°vel num guarda um valor par, altere a vari√°vel mensagem para 'num √© par!', onde num √© o pr√≥prio n√∫mero. Por exemplo: '6 √© par!';
Se a vari√°vel num guarda um valor √≠mpar, exiba a mensagem 'num √© √≠mpar!', onde num √© o pr√≥prio n√∫mero. Por exemplo: '7 √© √≠mpar!';
De olho na dica üëÄ : Um n√∫mero inteiro qualquer √© dito par se, ao ser dividido pelo n√∫mero dois, resulta em um n√∫mero inteiro, ou seja, seu resultado √© um n√∫mero sem casas decimais. Caso contr√°rio, esse n√∫mero √© √≠mpar.

Use a opera√ß√£o de m√≥dulo (%) para descobrir o resto de num / 2.

*/

let num = 22;
let mensagem1;
    if (num % 2 === 0) {
        mensagem1 = num + ' √© par!';
    } else {
        mensagem1 = num + ' √© impar!';
    };
console.log(mensagem1);

/*
Calcule a m√©dia üßÆ
Crie um algoritmo que use duas notas, armazenadas nas vari√°veis nota1 e nota2, de uma pessoa estudante para calcular a m√©dia e utilize a vari√°vel resultado para exibir se a pessoa est√° ou n√£o aprovada:

let nota1 = 8;
let nota2 = 6;
let media;
let resultado;

Calcule a media e salve na vari√°vel media;
Se a m√©dia calculada for maior ou igual a 7, o valor da vari√°vel resultado deve ser: 'Pessoa estudante aprovada';
Se a m√©dia calculada for menor que 7, o valor da vari√°vel resultado deve ser: 'Pessoa estudante reprovada'.

De olho na dica üëÄ : A m√©dia de um conjunto de n√∫meros √© obtida somando todos os n√∫meros desse conjunto e dividindo o resultado dessa soma pela quantidade existente de n√∫meros. Por exemplo, caso as notas sejam 6 e 7:

Some as duas notas: 6 + 7 = 13;
Como temos duas notas, dividimos o resultado da soma por 2: let media = 13/2 = 6.5;
Voc√™ pode fazer: let media = (nota1 + nota2) / 2.
*/

let nota1 = 8;
let nota2 = 6;
let media;
let resultado;

media = (nota1 + nota2) / 2
    if (media >= 7) {
        resultado = 'A m√©dia do aluno √© ' + media + ' sendo assim, essa m√©dia √© igual ou superior a m√©dia de aprova√ß√£o. Aluno aprovado!';
    } else {
        resultado = 'A m√©dia do aluno √© ' + media + ' sendo assim, essa m√©dia √© menor que a m√©dia de aprova√ß√£o. Aluno reprovado!';
    };
console.log(resultado);

/*
Valide as informa√ß√µes de login üßë‚Äçüíª
Crie um algoritmo de valida√ß√£o de login usando as seguintes informa√ß√µes:

let usuario = 'tryber';
let senha = 'tr1b3';
let autenticacao;

Se o valor de usuario for igual a 'tryber' e se o valor de senha for igual a 'tr1b3', a vari√°vel autenticacao deve receber a mensagem 'Autentica√ß√£o v√°lida!'. Se n√£o, a vari√°vel autenticacao deve mostrar a mensagem 'Login e/ou senha incorretos'.

*/

let usuario = 'tryber';
let senha = 'tr1b3';
let autenticacao;

    if (autenticacao = usuario === 'tryber' && senha === 'tr1b3') {
        autenticacao = 'Autentica√ß√£o v√°lidada!';
    } else {
        autenticacao = 'login e/ou senha incorretos!';
    };
console.log(autenticacao);

/*
Encontre a pessoa mais velha üëµ
Julia e Erick est√£o aprendendo a programar em JavaScript pela Trybe. Juntos eles querem construir um algoritmo capaz de informar, no console, qual dos dois √© mais velho. Ajude-os a elaborar esse algoritmo com as seguintes condi√ß√µes:

a. Se o valor da vari√°vel idadeJulia for maior que o valor da vari√°vel idadeErick:

Atribua √† vari√°vel verificaIdadePessoas a string 'Julia √© mais velha que Erick';
b. Caso a condi√ß√£o anterior seja falsa:

Verifique se o valor da vari√°vel idadeErick √© maior que o valor da vari√°vel idadeJulia;
Atribua √† vari√°vel verificaIdadePessoas a string 'Erick √© mais velho que Julia'.
c. Se nenhuma das condi√ß√µes anteriores for verdadeira:

Atribua √† vari√°vel verificaIdadePessoas a string 'Possuem a mesma idade';

Considere que as seguintes vari√°veis est√£o dispon√≠veis (os valores abaixo s√£o exemplos);

let idadeJulia = 25;
let idadeErick = 21;
let verificaIdadePessoas = '';

*/

let idadeJulia = 18;
let idadeErick = 18;
let verificaIdadePessoas;
    if (idadeJulia > idadeErick) {
        verificaIdadePessoas = 'A J√∫lia √© mais velha que Erick, pois ela tem ' + idadeJulia + ' anos e o Erick tem apenas ' + idadeErick + ' anos';
    } else if (idadeErick > idadeJulia) {
        verificaIdadePessoas = 'O Erick √© mais velho que J√∫lia, pois ele tem ' + idadeErick + ' anos e a J√∫lia tem apenas ' + idadeJulia + ' anos';
    } else {
        verificaIdadePessoas = 'Ambos tem a mesma idade, que √© ' + idadeErick + ' anos'; //coloquei uma variavel de idade, pois n√£o ir√° interferir diretamente nesse ponto. 
    };
console.log (verificaIdadePessoas);

/*
Encontre a classe do personagem üßô‚Äç‚ôÄÔ∏è
Imagine que em uma partida de RPG (Role-playing game) voc√™ deve jogar um dado de 20 lados (D20) para determinar a classe de um personagem, ou seja, de acordo com o n√∫mero sorteado pelo dado uma classe ser√° escolhida. Considere as regras a seguir:

N√∫mero menor que 4 = Guerreiro(a);
N√∫mero maior ou igual a 4 e menor que 8 = Ladino(a);
N√∫mero maior ou igual a 8 e menor que 12 = Curandeiro(a);
N√∫mero maior ou igual a 12 e menor que 16 = Arqueiro(a);
N√∫mero maior ou igual a 16 = Feiticeiro(a);
Crie um algoritmo que informa a classe escolhida de acordo com o n√∫mero sorteado pelo dado de 20 lados e atribua o resultado na vari√°vel resultado.

Use condicionais para salvar a classe correta na vari√°vel classe;

A mensagem na vari√°vel resultado deve ser como essa: 'Sua classe √©: Arqueiro(a)'.

Considere que as seguintes vari√°veis est√£o dispon√≠veis (os valores abaixo s√£o exemplos);

let dadoNumero = 16;
let classe = '';
let resultado = '';

*/

let dadoNumero = 14;
let classe = '';
let resultado1 = '';

    if (dadoNumero < 4) {
        classe = 'Guerreiro(a)';
    } else if (dadoNumero >= 4 && dadoNumero < 8) {
        classe = 'Ladino(a)';
    } else if (dadoNumero >= 8 && dadoNumero < 12) {
        classe = 'Curandeiro(a)';
    } else if (dadoNumero >= 12 && dadoNumero < 16) {
        classe = 'Arqueiro(a)';
    } else if (dadoNumero >= 16) {
        classe = 'Feiticeiro(a)';
    };
resultado1 = classe;
console.log ('Sua classe √© ' + classe);